clear,clc

addpath('../')
addpath('../../common_functions')

R = 8;
V=8;
g = 9.8;


N=10;
D=4;

accel_cost=.01;
der_costs = zeros(1,N+1);
der_costs(1) = 0.3;
der_costs(2) = 1;
der_costs(3) = 0;
der_costs(4) = 50;
der_costs(5) =1;

titles={'(a)','(b)','(c)','(d)'};


lw=2;
figure(1);clf;
set(gca,'box','on')

ii = 3;

% for ii=1:4
%     subplot(2,2,ii)
switch ii
    case 1
        xy_start = [0;0];
        theta_start = 0;
        xy_end = [1.3*R;2.95*R];
        theta_end = -pi/6;
    case 2
        xy_start = [0;0];
        theta_start = 0;
        xy_end = [-.3*R;.35*R];
        theta_end = -pi/1.2;
    case 3
        xy_start = [0;0];
        theta_start = 0;
        xy_end = [.3*R;3.35*R];
        theta_end = -pi/1.2;
    case 4
        xy_start = [0;0];
        theta_start = 0;
        xy_end = [1.3*R;-1.35*R];
        theta_end = .2;
    case 5
        xy_start = [0;0];
        xy_end = [-.5*R;2.5*R];
        theta_start = 0;
        theta_end = 3*pi/4;
    case 6
        xy_start = zeros(2,1);
        theta_start = pi/2;
        xy_end =[3.6248;-0.4306];
        theta_end = 8.3519;
    case 7
        xy_start = zeros(2,1);
        theta_start = pi/2;
        xy_end =[0.2025;2.3594];
        theta_end = 2.6043;
    case 8
        xy_start = zeros(2,1);
        theta_start = pi/2;
        xy_end =[.01*R;.5*R];
        theta_end = pi/2;
    otherwise
        xy_start = [R;0];
        xy_end = [-3*R;2*R];
        theta_start = pi/2;
        theta_end = pi/2;
end

trans_der_0 = zeros(D,1);
trans_der_final = zeros(D,1);
re_opt = 10;
path = dubinsGetPath(R,xy_start,theta_start,xy_end,theta_end);
%     trans_der_0(3) = path{1}.curvature;
%     trans_der_final(3) = path{end}.curvature;
[path_trans_poly,J] = dubinsTransPolyGetPath(path,der_costs,D,trans_der_0,trans_der_final,re_opt);

[x,y]=dubinsTransPolyDiscretizePath(path_trans_poly);
[x_segs,y_segs,p_segs,pd_segs,pdd_segs]=dubinsTransPolyDiscretizePathSegs(path_trans_poly);
[x_dub,y_dub]=dubinsDiscretizePath(path_trans_poly);

jxs = [path{2}.start_pt(1),path{2}.end_pt(1)];
jys = [path{2}.start_pt(2),path{2}.end_pt(2)];

subplot(1,2,1)
hold on

plot(x_dub,y_dub,'LineWidth',lw,'Color','k');
plot(jxs,jys,'k*','MarkerSize',10);

plot(x_segs{1},y_segs{1},'r','linewidth',lw)
plot(x_segs{2},y_segs{2},'g','linewidth',lw)
plot(x_segs{3},y_segs{3},'b','linewidth',lw)
plot(x_segs{1}(end),y_segs{1}(end),'k*','MarkerSize',10);
plot(x_segs{2}(end),y_segs{2}(end),'k*','MarkerSize',10);

midind = 3300;
plot([x(midind) x_dub(midind)],[y(midind) y_dub(midind)],'k:','linewidth',2)
% annotation('textarrow', [0.45,0.6], [0.3,0.34],'String' , 'Transverse Offset','fontsize',12);
set(gca,'box','on')
grid on
axis equal
xlabel('X-position (m)')
ylabel('Y-position (m)')
axis([-2 17 -2 30])

n1 = (numel(p_segs{1})-1);
n2 = (numel(p_segs{2})-1);
n3 = (numel(p_segs{3})-1);

subplot(3,2,2),hold on
set(gca,'box','on')
plot((0:n1)/10000,p_segs{1},'r','linewidth',lw)
plot((n1+(0:n2))/10000,p_segs{2},'g','linewidth',lw)
plot((n1+n2+(0:n3))/10000,p_segs{3},'b','linewidth',lw)
plot((n1)/10000,p_segs{1}(end),'k*','MarkerSize',10)
plot((n1+n2)/10000,p_segs{2}(end),'k*','MarkerSize',10)
xlabel('Normalized Path Coordinate (\tau)')
ylabel('Transverse Offset (m)')
grid on

subplot(3,2,4),hold on
set(gca,'box','on')
plot((0:n1)/10000,pd_segs{1},'r','linewidth',lw)
plot((n1+(0:n2))/10000,pd_segs{2},'g','linewidth',lw)
plot((n1+n2+(0:n3))/10000,pd_segs{3},'b','linewidth',lw)
plot((n1)/10000,pd_segs{1}(end),'k*','MarkerSize',10)
plot((n1+n2)/10000,pd_segs{2}(end),'k*','MarkerSize',10)
xlabel('Normalized Path Coordinate (\tau)')
ylabel('Offset Derivative')
grid on

subplot(3,2,6),hold on
set(gca,'box','on')
plot((0:n1)/10000,pdd_segs{1},'r','linewidth',lw)
plot((n1+(0:n2))/10000,pdd_segs{2},'g','linewidth',lw)
plot((n1+n2+(0:n3))/10000,pdd_segs{3},'b','linewidth',lw)
plot((n1)/10000,pdd_segs{1}(end),'k*','MarkerSize',10)
plot((n1+n2)/10000,pdd_segs{2}(end),'k*','MarkerSize',10)
plot((n1)/10000,pdd_segs{2}(1),'k*','MarkerSize',10)
plot((n1+n2)/10000,pdd_segs{3}(1),'k*','MarkerSize',10)

plot([(n1)/10000 (n1)/10000],[pdd_segs{1}(end) pdd_segs{2}(1)],'k:','linewidth',2)
plot([(n1+n2)/10000 (n1+n2)/10000],[pdd_segs{2}(end) pdd_segs{3}(1)],'k:','linewidth',2)

grid on
xlabel('Normalized Path Coordinate (\tau)')
ylabel('Offset Second Derivative')

set(gcf,'paperposition',[0 0 8 6.5*(4/5)])
saveas(gcf,'/home/car/Documents/rrg_papers/car/ijrr14/figures/ijrr_trans_poly_example.eps','epsc')

% figure(2),clf,hold on
% subplot(3,1,1),hold on
% plot((0:n1)/10000,p_segs{1},'r','linewidth',lw)
% plot((n1+(0:n2))/10000,p_segs{2},'g','linewidth',lw)
% plot((n1+n2+(0:n3))/10000,p_segs{3},'b','linewidth',lw)
% 
% subplot(3,1,2),hold on
% plot((0:n1)/10000,pd_segs{1},'r','linewidth',lw)
% plot((n1+(0:n2))/10000,pd_segs{2},'g','linewidth',lw)
% plot((n1+n2+(0:n3))/10000,pd_segs{3},'b','linewidth',lw)
% 
% subplot(3,1,3),hold on
% plot((0:n1)/10000,pdd_segs{1},'r','linewidth',lw)
% plot((n1+(0:n2))/10000,pdd_segs{2},'g','linewidth',lw)
% plot((n1+n2+(0:n3))/10000,pdd_segs{3},'b','linewidth',lw)
